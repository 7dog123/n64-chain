# Triangle ucode demo.

# RSP CP0 registers
.set DMA_CACHE,             $0
.set DMA_DRAM,              $1
.set DMA_READ_LENGTH,       $2
.set DMA_WRITE_LENGTH,      $3
.set SP_STATUS,             $4
.set DMA_FULL,              $5
.set DMA_BUSY,              $6
.set SP_RESERVED,           $7
.set CMD_START,             $8
.set CMD_END,               $9
.set CMD_CURRENT,           $10
.set CMD_STATUS,            $11
.set CMD_CLOCK,             $12
.set CMD_BUSY,              $13
.set CMD_PIPE_BUSY,         $14
.set CMD_TMEM_BUSY,         $15

# SP_STATUS write flags
.set CLEAR_HALT,            0x1
.set SET_HALT,              0x2
.set CLEAR_BROKE,           0x4
.set CLEAR_RSP_INTERRUPT,   0x8
.set SET_RSP_INTERRUPT,     0x10
.set CLEAR_SINGLE_STEP,     0x20
.set SET_SINGLE_STEP,       0x40
.set CLEAR_INTR_ON_BREAK,   0x80
.set SET_INTR_ON_BREAK,     0x100

# CMD_STATUS write flags
.set CLEAR_XBUS_DMEM_DMA,   0x1
.set SET_XBUS_DMEM_DMA,     0x2
.set CLEAR_FREEZE,          0x4
.set SET_FREEZE,            0x8
.set CLEAR_FLUSH,           0x10
.set SET_FLUSH,             0x20
.set CLEAR_TMEM_COUNTER,    0x40
.set CLEAR_PIPE_COUNTER,    0x80
.set CLEAR_CMD_COUNTER,     0x100
.set CLEAR_CLOCK_COUNTER,   0x200

.text

init_rsp:
  addiu $at, $0, (CLEAR_RSP_INTERRUPT | SET_INTR_ON_BREAK)
  mtc0 $at, SP_STATUS

# Initialize the RDP (enable the XBUS, etc.)
init_rdp:
  addiu $at, $0, (SET_XBUS_DMEM_DMA | CLEAR_FREEZE | CLEAR_FLUSH)
  mtc0 $at, CMD_STATUS

  #addiu $at, $0, 0x1000
  #mtc0 $at, CMD_START
  #mtc0 $at, CMD_END

# Build 'Set Scissor' (xl=320.0, yl=240.0, xh=0.0, yl=0.0)
  lui $at, 0x2D00
  sw $at, 0x0($0)
  lui $at, 0x0050
  addiu $at, $at, 0x03C0
  sw $at, 0x4($0)

# Build 'Set Other Modes' (type='fill')
  lui $at, 0x2F30
  sw $at, 0x8($0)
  sw $0, 0xC($0)

# Build 'Set Color Image' (size=2, width=320, origin=0x200000)
  lui $at, 0x3F10
  ori $at, $at, 0x013F
  sw $at, 0x10($0)
  lui $at, 0x0020
  sw $at, 0x14($0)

# Build 'Set Fill Color' (color=0xf000f000)
  lui $at, 0x3700
  sw $at, 0x18($0)
  lui $at, 0x0F00
  ori $at, $at, 0x0F00
  sw $at, 0x1C($0)

# Build 'Fill Rectangle' (xl=240.0, yl=200.0, xh=80.0, yh=120.0)
  lui $at, 0x363C
  ori $at, $at, 0x0320
  sw $at, 0x20($0)
  lui $at, 0x0014
  ori $at, $at, 0x01E0
  sw $at, 0x24($0)

# Build 'Sync Pipe'
  lui $at, 0x2700
  sw $at, 0x28($0)
  sw $0, 0x2C($0)

# Build 'Sync Full'
  lui $at, 0x2900
  sw $at, 0x30($0)
  sw $0, 0x34($0)

# Send command to RDP over XBUS.
  lui $at, 0x0400
  mtc0 $at, CMD_START
  ori $at, $at, 0x38
  mtc0 $at, CMD_END

# Raise an interrupt; we're done.
  break
  nop

